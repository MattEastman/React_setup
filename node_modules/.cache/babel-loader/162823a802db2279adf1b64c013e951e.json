{"ast":null,"code":"import _defineProperty from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mattheweastman/Desktop/react_course/react_w2/confusion/src/components/DishDetailComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { DISHES } from '../shared/dishes';\n\nvar DishDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DishDetail, _Component);\n\n  function DishDetail() {\n    _classCallCheck(this, DishDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DishDetail).apply(this, arguments));\n  }\n\n  _createClass(DishDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('Dishdetail component componentdid Mount invoked');\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log('Dishdetail com did update');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var renderDish = function renderDish(dish) {\n        var _React$createElement;\n\n        if (dish != null) return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(CardImg, (_React$createElement = {\n          width: \"100%\",\n          src: dish.image,\n          alt: dish.name\n        }, _defineProperty(_React$createElement, \"width\", \"100%\"), _defineProperty(_React$createElement, \"__source\", {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, dish.name), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, dish.description))));else return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      };\n\n      var renderComments = function renderComments(dish) {\n        if (dish != null) {\n          var dishComment = _this.props.dishes.comments.map(function (com) {\n            return React.createElement(\"div\", {\n              key: com.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, React.createElement(\"ul\", {\n              className: \"list-unstyled\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42\n              },\n              __self: this\n            }, React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, com.comment), React.createElement(\"li\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, \"by \", com.author, \" on \", new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short',\n              day: '2-digit'\n            }).format(new Date(Date.parse(com.date))))));\n          });\n\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"Read Comments\"), dishComment);\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        }\n      };\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        width: \"100%\",\n        className: \"col-xs-12 col-sm-12 col-md-5 m-1 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, renderDish(this.props.dishes)), React.createElement(\"div\", {\n        width: \"100%\",\n        className: \"col-xs-12 col-sm-12 col-md-5 m-1 \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, renderComments(this.props.dishes)));\n    }\n  }]);\n\n  return DishDetail;\n}(Component);\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/mattheweastman/Desktop/react_course/react_w2/confusion/src/components/DishDetailComponent.js"],"names":["React","Card","CardImg","CardText","CardBody","CardTitle","DISHES","DishDetail","console","log","renderDish","dish","image","name","description","renderComments","dishComment","props","dishes","comments","map","com","id","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle } from 'reactstrap';\nimport {DISHES} from '../shared/dishes';\n\nclass DishDetail extends Component{\n    \n     componentDidMount(){\n      console.log('Dishdetail component componentdid Mount invoked');\n  }\n    \n    componentDidUpdate(){\n        console.log('Dishdetail com did update');\n}\n  render() {\n       \n   \n\n    const renderDish=(dish)=> {\n        \n        if (dish != null)\n            return(\n                <div className=\"container\">\n                <Card>\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} width='100%'/>\n                    <CardBody>\n                      <CardTitle>{dish.name}</CardTitle>\n                      <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n                </div>\n            );\n        else\n            return(<div></div>);\n    }\n\n    const renderComments=(dish)=>{\n        if(dish!=null){\n            const dishComment = this.props.dishes.comments.map(com => {\n                return(\n                    <div key={com.id}>\n                    <ul className=\"list-unstyled\">  \n                        <li>{com.comment}</li>\n                        <li>by {com.author} on {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(com.date)))}</li>\n                    </ul>\n                    </div>    \n                );\n            });\n            return( \n                <div>\n                    <h4>Read Comments</h4>\n                    {dishComment}\n                </div>\n            )}\n        else\n        {return(<div></div>)}\n    }\n    \n    return(\n      <div className=\"row\">\n       <div width=\"100%\" className=\"col-xs-12 col-sm-12 col-md-5 m-1 \">\n        {renderDish(this.props.dishes)}\n       </div>\n\n        <div width=\"100%\" className=\"col-xs-12 col-sm-12 col-md-5 m-1 \">\n        {renderComments(this.props.dishes)}\n        </div>\n      </div>\n    )}\n}\n    \nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}