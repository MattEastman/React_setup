{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseurl';\nexport var addComment = function addComment(comment) {\n  return {\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n  };\n};\nexport var postComment = function postComment(dishId, rating, author, comment) {\n  return function (dispatch) {\n    var newComment = {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    return fetch(baseUrl + 'comments', {\n      method: \"POST\",\n      body: JSON.stringify(newComment),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      throw error;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch(addComment(response));\n    }).catch(function (error) {\n      console.log('post comments', error.message);\n      alert('Your comment could not be posted\\nError: ' + error.message);\n    });\n  };\n};\nexport var fetchDishes = function fetchDishes() {\n  return function (dispatch) {\n    dispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (dishes) {\n      return dispatch(addDishes(dishes));\n    }).catch(function (error) {\n      return dispatch(dishesFailed(error.message));\n    });\n  };\n};\nexport var dishesLoading = function dishesLoading() {\n  return {\n    type: ActionTypes.DISHES_LOADING\n  };\n};\nexport var dishesFailed = function dishesFailed(errmess) {\n  return {\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n  };\n};\nexport var addDishes = function addDishes(dishes) {\n  return {\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n  };\n};\nexport var fetchComments = function fetchComments() {\n  return function (dispatch) {\n    return fetch(baseUrl + 'comments').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (comments) {\n      return dispatch(addComments(comments));\n    }).catch(function (error) {\n      return dispatch(commentsFailed(error.message));\n    });\n  };\n};\nexport var commentsFailed = function commentsFailed(errmess) {\n  return {\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n  };\n};\nexport var addComments = function addComments(comments) {\n  return {\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n  };\n};\nexport var fetchPromos = function fetchPromos() {\n  return function (dispatch) {\n    dispatch(promosLoading());\n    return fetch(baseUrl + 'promotions').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errmess = new Error(error.message);\n      throw errmess;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (promos) {\n      return dispatch(addPromos(promos));\n    }).catch(function (error) {\n      return dispatch(promosFailed(error.message));\n    });\n  };\n};\nexport var promosLoading = function promosLoading() {\n  return {\n    type: ActionTypes.PROMOS_LOADING\n  };\n};\nexport var promosFailed = function promosFailed(errmess) {\n  return {\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n  };\n};\nexport var addPromos = function addPromos(promos) {\n  return {\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n  };\n};\nexport var fetchLeaders = function fetchLeaders() {\n  return function (dispatch) {\n    dispatch(leadersLoading(true));\n    return fetch(baseUrl + 'leaders').then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errorMessage = new Error(error.errorMessage);\n      throw errorMessage;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (leaders) {\n      return dispatch(addLeaders(leaders));\n    }).catch(function (error) {\n      return dispatch(leadersFailed(error.message));\n    });\n  };\n};\nexport var leadersLoading = function leadersLoading() {\n  return function (dispatch) {\n    return {\n      type: ActionTypes.LEADERS_LOADING\n    };\n  };\n};\nexport var leadersFailed = function leadersFailed(errmess) {\n  return {\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n  };\n};\nexport var addLeaders = function addLeaders(leaders) {\n  return {\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n  };\n};\nexport var postFeedback = function postFeedback(feedback) {\n  return function (dispatch) {\n    var newFeedback = Object.assign({\n      date: new Date().toISOString()\n    }, feedback);\n    return fetch(baseUrl + 'feedback', {\n      method: 'POST',\n      body: JSON.stringify(newFeedback),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    }, function (error) {\n      var errorMessage = new Error(error.errorMessage);\n      throw errorMessage;\n    }).then(function (response) {\n      return response.json();\n    }).then(function (response) {\n      return dispatch(addComment(response));\n    }).catch(function (error) {\n      console.log('Post feedback: ' + error.message);\n      alert('Feedback could not be posted:\\n' + error.message);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mattheweastman/Desktop/react_course/react_w2/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","message","alert","fetchDishes","dishesLoading","errmess","dishes","addDishes","dishesFailed","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","errorMessage","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFeedback","feedback","newFeedback","Object","assign"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseurl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.errorMessage);\n                throw errorMessage;\n            }\n        )\n\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error.message)))\n}\n\nexport const leadersLoading = () => (dispatch) => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const postFeedback = (feedback) => (dispatch) => {\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\n    \n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n\n                throw error;\n            }\n        },\n            error => {\n                var errorMessage = new Error(error.errorMessage);\n                throw errorMessage;\n            }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('Post feedback: ' + error.message);\n            alert('Feedback could not be posted:\\n' + error.message)\n        })\n};"]},"metadata":{},"sourceType":"module"}